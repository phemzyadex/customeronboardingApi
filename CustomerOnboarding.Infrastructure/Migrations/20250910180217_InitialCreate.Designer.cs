// <auto-generated />
using System;
using CustomerOnboarding.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CustomerOnboarding.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250910180217_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPhoneVerified")
                        .HasColumnType("bit");

                    b.Property<Guid>("LgaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("OnboardingCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("OtpExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PendingOtp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LgaId");

                    b.HasIndex("StateId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("CustomerOnboarding.Core.Models.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b4a2301e-d019-489f-97ed-ed3eacbec1c7"),
                            PasswordHash = "$2a$11$09kqxVNLmgHxNAXJgg84weALfO2n.Hglevlz7Ddr..3CwtSoCzJWm",
                            Role = "Administrator",
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("6f5c1ca5-5f78-4d15-b573-1c2109054fcf"),
                            PasswordHash = "$2a$11$Qz3LfrWfEHF5r6NhaaTkS.csRaL2KeAI2RYmkebUaaNG49bYgn.RW",
                            Role = "User",
                            Username = "user"
                        });
                });

            modelBuilder.Entity("CustomerOnboarding.Core.Models.Lga", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("Lgas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9d454989-b9b2-42fc-b3d4-42748afdef11"),
                            Name = "Alimosho",
                            StateId = new Guid("a05288f7-a58c-4af4-bd22-c2e2532f952b")
                        },
                        new
                        {
                            Id = new Guid("12c0f8cb-3b7f-4072-9061-ca2f3a3f2d90"),
                            Name = "Ikeja",
                            StateId = new Guid("a05288f7-a58c-4af4-bd22-c2e2532f952b")
                        },
                        new
                        {
                            Id = new Guid("05b1237e-b189-4c90-adcf-785047b76362"),
                            Name = "Lagos-Island",
                            StateId = new Guid("a05288f7-a58c-4af4-bd22-c2e2532f952b")
                        },
                        new
                        {
                            Id = new Guid("6dc08fa6-2b77-49d0-b3e2-1e3cd58cbcaf"),
                            Name = "Lagos-Mainland",
                            StateId = new Guid("a05288f7-a58c-4af4-bd22-c2e2532f952b")
                        },
                        new
                        {
                            Id = new Guid("14597d69-f037-49bf-97c1-20257aeeacd7"),
                            Name = "Surulere",
                            StateId = new Guid("a05288f7-a58c-4af4-bd22-c2e2532f952b")
                        });
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a05288f7-a58c-4af4-bd22-c2e2532f952b"),
                            Name = "Lagos"
                        });
                });

            modelBuilder.Entity("Customer", b =>
                {
                    b.HasOne("CustomerOnboarding.Core.Models.Lga", "Lga")
                        .WithMany("Customers")
                        .HasForeignKey("LgaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("State", "State")
                        .WithMany("Customers")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Lga");

                    b.Navigation("State");
                });

            modelBuilder.Entity("CustomerOnboarding.Core.Models.Lga", b =>
                {
                    b.HasOne("State", "State")
                        .WithMany("Lgas")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("CustomerOnboarding.Core.Models.Lga", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("State", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Lgas");
                });
#pragma warning restore 612, 618
        }
    }
}
